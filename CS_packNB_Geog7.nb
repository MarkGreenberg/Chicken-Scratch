(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24626,        504]
NotebookOptionsPosition[     24289,        490]
NotebookOutlinePosition[     24671,        506]
CellTagsIndexPosition[     24628,        503]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Delayed", "[", "\[IndentingNewLine]", 
    RowBox[{"APIFunction", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"RandomChoice", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         "1", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             InterpretationBox[
              DynamicModuleBox[{Typeset`open = False}, 
               TemplateBox[{"List","ListIcon",GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["List", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"40", ",", "2"}], "}"}], "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["9040", "IconizedItem"]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 Dynamic[Typeset`open]},
                "IconizedObject"]],
              {{
                Entity["Country", "Algeria"], "Algeria"}, {
                Entity["Country", "Angola"], "Angola"}, {
                Entity["Country", "Benin"], "Benin"}, {
                Entity["Country", "Botswana"], "Botswana"}, {
                Entity["Country", "BurkinaFaso"], "Burkina Faso"}, {
                Entity["Country", "Cameroon"], "Cameroon"}, {
                Entity["Country", "CentralAfricanRepublic"], 
                "Central African Republic"}, {
                Entity["Country", "Chad"], "Chad"}, {
                Entity["Country", "DemocraticRepublicCongo"], 
                "Democratic Republic of the Congo"}, {
                Entity["Country", "Egypt"], "Egypt"}, {
                Entity["Country", "Ethiopia"], "Ethiopia"}, {
                Entity["Country", "Gabon"], "Gabon"}, {
                Entity["Country", "Ghana"], "Ghana"}, {
                Entity["Country", "Guinea"], "Guinea"}, {
                Entity["Country", "IvoryCoast"], "Ivory Coast"}, {
                Entity["Country", "Kenya"], "Kenya"}, {
                Entity["Country", "Liberia"], "Liberia"}, {
                Entity["Country", "Libya"], "Libya"}, {
                Entity["Country", "Madagascar"], "Madagascar"}, {
                Entity["Country", "Mali"], "Mali"}, {
                Entity["Country", "Mauritania"], "Mauritania"}, {
                Entity["Country", "Morocco"], "Morocco"}, {
                Entity["Country", "Mozambique"], "Mozambique"}, {
                Entity["Country", "Namibia"], "Namibia"}, {
                Entity["Country", "Niger"], "Niger"}, {
                Entity["Country", "Nigeria"], "Nigeria"}, {
                Entity["Country", "RepublicCongo"], "Republic of the Congo"}, {
                Entity["Country", "Senegal"], "Senegal"}, {
                Entity["Country", "SierraLeone"], "Sierra Leone"}, {
                Entity["Country", "Somalia"], "Somalia"}, {
                Entity["Country", "SouthAfrica"], "South Africa"}, {
                Entity["Country", "SouthSudan"], "South Sudan"}, {
                Entity["Country", "Sudan"], "Sudan"}, {
                Entity["Country", "Tanzania"], "Tanzania"}, {
                Entity["Country", "Togo"], "Togo"}, {
                Entity["Country", "Tunisia"], "Tunisia"}, {
                Entity["Country", "Uganda"], "Uganda"}, {
                Entity["Country", "WesternSahara"], "Western Sahara"}, {
                Entity["Country", "Zambia"], "Zambia"}, {
                Entity["Country", "Zimbabwe"], "Zimbabwe"}},
              SelectWithContents->True,
              Selectable->False], ",", "4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pic", "=", 
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"GeoGraphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"GeoStyling", "[", "\"\<ReliefMap\>\"", "]"}], ",", 
                 RowBox[{"Polygon", "[", 
                  TemplateBox[{"\"Africa\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"GeographicRegion\"", ",", "\"Africa\""}], 
                    "]"}],"\"Entity[\\\"GeographicRegion\\\", \\\"Africa\\\"]\
\"","\"geographic region\""},
                   "Entity"], "]"}], ",", 
                 RowBox[{"GeoStyling", "[", 
                  RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", ".75", ",", ".6"}], "]"}], 
                  "]"}], ",", 
                 RowBox[{"Polygon", "[", "holder", "]"}]}], "}"}], ",", 
               RowBox[{"GeoBackground", "\[Rule]", "None"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "480", "}"}], ",", 
                  RowBox[{"{", "540", "}"}]}], "}"}]}]}], "]"}], "]"}], "/.", 
            
            RowBox[{"holder", "\[Rule]", 
             RowBox[{"data", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"q", "=", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Which African nation is shown in purple on the map?\>\"", 
             ",", 
             RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"choices", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "&"}], "/@", "data"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"mixed", "=", 
           RowBox[{"RandomSample", "[", "choices", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ans", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"mixed", ",", 
              RowBox[{
              "choices", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"InputForm", "[", 
           RowBox[{"{", 
            RowBox[{"q", ",", "ans", ",", "mixed", ",", "pic"}], "}"}], 
           "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "2", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             InterpretationBox[
              DynamicModuleBox[{Typeset`open = False}, 
               TemplateBox[{"Association","AssociationIcon",GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Association", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["19400", "IconizedItem"]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 Dynamic[Typeset`open]},
                "IconizedObject"]],
              Association["American" -> {
                 Entity["Country", "Belize"], 
                 Entity["Country", "CostaRica"], 
                 Entity["Country", "ElSalvador"], 
                 Entity["Country", "Guatemala"], 
                 Entity["Country", "Honduras"], 
                 Entity["Country", "Nicaragua"], 
                 Entity["Country", "Panama"], 
                 Entity["Country", "Argentina"], 
                 Entity["Country", "Bolivia"], 
                 Entity["Country", "Brazil"], 
                 Entity["Country", "Chile"], 
                 Entity["Country", "Colombia"], 
                 Entity["Country", "Ecuador"], 
                 Entity["Country", "FalklandIslands"], 
                 Entity["Country", "FrenchGuiana"], 
                 Entity["Country", "Guyana"], 
                 Entity["Country", "Paraguay"], 
                 Entity["Country", "Peru"], 
                 Entity["Country", "Suriname"], 
                 Entity["Country", "Uruguay"], 
                 Entity["Country", "Venezuela"], 
                 Entity["Country", "Anguilla"], 
                 Entity["Country", "AntiguaBarbuda"], 
                 Entity["Country", "Bahamas"], 
                 Entity["Country", "Barbados"], 
                 Entity["Country", "Bermuda"], 
                 Entity["Country", "BritishVirginIslands"], 
                 Entity["Country", "Canada"], 
                 Entity["Country", "CaymanIslands"], 
                 Entity["Country", "Cuba"], 
                 Entity["Country", "Dominica"], 
                 Entity["Country", "DominicanRepublic"], 
                 Entity["Country", "Greenland"], 
                 Entity["Country", "Grenada"], 
                 Entity["Country", "Guadeloupe"], 
                 Entity["Country", "Haiti"], 
                 Entity["Country", "Jamaica"], 
                 Entity["Country", "Martinique"], 
                 Entity["Country", "Mexico"], 
                 Entity["Country", "Montserrat"], 
                 Entity["Country", "PuertoRico"], 
                 Entity["Country", "SaintKittsNevis"], 
                 Entity["Country", "SaintLucia"], 
                 Entity["Country", "SaintPierreMiquelon"], 
                 Entity["Country", "SaintVincentGrenadines"], 
                 Entity["Country", "SintMaarten"], 
                 Entity["Country", "TurksCaicosIslands"], 
                 Entity["Country", "UnitedStates"], 
                 Entity["Country", "UnitedStatesVirginIslands"]}, 
               "Asian" -> {
                 Entity["Country", "Afghanistan"], 
                 Entity["Country", "Armenia"], 
                 Entity["Country", "Azerbaijan"], 
                 Entity["Country", "Bahrain"], 
                 Entity["Country", "Bangladesh"], 
                 Entity["Country", "Bhutan"], 
                 Entity["Country", "Brunei"], 
                 Entity["Country", "Cambodia"], 
                 Entity["Country", "China"], 
                 Entity["Country", "ChristmasIsland"], 
                 Entity["Country", "CocosKeelingIslands"], 
                 Entity["Country", "EastTimor"], 
                 Entity["Country", "Egypt"], 
                 Entity["Country", "GazaStrip"], 
                 Entity["Country", "Georgia"], 
                 Entity["Country", "HongKong"], 
                 Entity["Country", "India"], 
                 Entity["Country", "Indonesia"], 
                 Entity["Country", "Iran"], 
                 Entity["Country", "Iraq"], 
                 Entity["Country", "Israel"], 
                 Entity["Country", "Japan"], 
                 Entity["Country", "Jordan"], 
                 Entity["Country", "Kazakhstan"], 
                 Entity["Country", "Kuwait"], 
                 Entity["Country", "Kyrgyzstan"], 
                 Entity["Country", "Laos"], 
                 Entity["Country", "Lebanon"], 
                 Entity["Country", "Macau"], 
                 Entity["Country", "Malaysia"], 
                 Entity["Country", "Maldives"], 
                 Entity["Country", "Mongolia"], 
                 Entity["Country", "Myanmar"], 
                 Entity["Country", "Nepal"], 
                 Entity["Country", "NorthKorea"], 
                 Entity["Country", "Oman"], 
                 Entity["Country", "Pakistan"], 
                 Entity["Country", "Philippines"], 
                 Entity["Country", "Qatar"], 
                 Entity["Country", "Russia"], 
                 Entity["Country", "SaudiArabia"], 
                 Entity["Country", "Singapore"], 
                 Entity["Country", "SouthKorea"], 
                 Entity["Country", "SriLanka"], 
                 Entity["Country", "Syria"], 
                 Entity["Country", "Taiwan"], 
                 Entity["Country", "Tajikistan"], 
                 Entity["Country", "Thailand"], 
                 Entity["Country", "Turkey"], 
                 Entity["Country", "Turkmenistan"], 
                 Entity["Country", "UnitedArabEmirates"], 
                 Entity["Country", "Uzbekistan"], 
                 Entity["Country", "Vietnam"], 
                 Entity["Country", "WestBank"], 
                 Entity["Country", "Yemen"]}, "European" -> {
                 Entity["Country", "Andorra"], 
                 Entity["Country", "Austria"], 
                 Entity["Country", "Belgium"], 
                 Entity["Country", "Denmark"], 
                 Entity["Country", "FaroeIslands"], 
                 Entity["Country", "France"], 
                 Entity["Country", "Germany"], 
                 Entity["Country", "Gibraltar"], 
                 Entity["Country", "Greece"], 
                 Entity["Country", "Guernsey"], 
                 Entity["Country", "Iceland"], 
                 Entity["Country", "Ireland"], 
                 Entity["Country", "IsleOfMan"], 
                 Entity["Country", "Italy"], 
                 Entity["Country", "Jersey"], 
                 Entity["Country", "Liechtenstein"], 
                 Entity["Country", "Luxembourg"], 
                 Entity["Country", "Malta"], 
                 Entity["Country", "Monaco"], 
                 Entity["Country", "Netherlands"], 
                 Entity["Country", "Norway"], 
                 Entity["Country", "Portugal"], 
                 Entity["Country", "SanMarino"], 
                 Entity["Country", "Spain"], 
                 Entity["Country", "Svalbard"], 
                 Entity["Country", "Sweden"], 
                 Entity["Country", "Switzerland"], 
                 Entity["Country", "UnitedKingdom"], 
                 Entity["Country", "VaticanCity"] 
                 Entity["Country", "Belarus"], 
                 Entity["Country", "Bulgaria"], 
                 Entity["Country", "CzechRepublic"], 
                 Entity["Country", "Hungary"], 
                 Entity["Country", "Moldova"], 
                 Entity["Country", "Poland"], 
                 Entity["Country", "Romania"], 
                 Entity["Country", "Slovakia"], 
                 Entity["Country", "Ukraine"]}],
              SelectWithContents->True,
              Selectable->False], ",", "1"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ansCo", "=", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{
             RowBox[{"Values", "[", "data", "]"}], "\[LeftDoubleBracket]", 
             "1", "\[RightDoubleBracket]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"range", "=", 
           RowBox[{"Quantity", "[", 
            RowBox[{
             RowBox[{"RandomInteger", "[", 
              RowBox[{"{", 
               RowBox[{"300", ",", "1200"}], "}"}], "]"}], ",", 
             "\"\<Kilometers\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"city", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"city", ",", 
               RowBox[{"{", 
                RowBox[{"_Real", ",", "_Real"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"city", "=", 
             RowBox[{"EntityValue", "[", 
              RowBox[{
               RowBox[{"RandomChoice", "[", 
                RowBox[{"CityData", "[", 
                 RowBox[{"{", 
                  RowBox[{"All", ",", 
                   RowBox[{"EntityValue", "[", 
                    RowBox[{"ansCo", ",", "\"\<Name\>\""}], "]"}]}], "}"}], 
                 "]"}], "]"}], ",", "\"\<Coordinates\>\""}], "]"}]}]}], "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"pic", "=", 
           RowBox[{"GeoGraphics", "[", 
            RowBox[{
             RowBox[{"GeoMarker", "[", 
              RowBox[{"city", ",", 
               RowBox[{"\"\<Color\>\"", "\[Rule]", 
                RowBox[{"Darker", "[", "Blue", "]"}]}], ",", 
               RowBox[{"Scale", "\[Rule]", 
                RowBox[{"Offset", "[", "50", "]"}]}]}], "]"}], ",", 
             RowBox[{"GeoCenter", "\[Rule]", "city"}], ",", 
             RowBox[{"GeoRange", "\[Rule]", "range"}], ",", 
             RowBox[{"GeoBackground", "\[Rule]", 
              RowBox[{"GeoStyling", "[", "\"\<ReliefMap\>\"", "]"}]}], ",", 
             RowBox[{"AspectRatio", "\[Rule]", 
              FractionBox["9", "8"]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "480", "}"}], ",", 
                RowBox[{"{", "540", "}"}]}], "}"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"q", "=", 
           RowBox[{"\"\<Which \>\"", "<>", 
            RowBox[{
             RowBox[{"Keys", "[", "data", "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "<>", 
            "\"\< country or territory is the pin in?\>\""}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"choices", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"EntityValue", "[", 
              RowBox[{"#", ",", "\"\<Name\>\""}], "]"}], "&"}], "/@", 
            RowBox[{"Take", "[", 
             RowBox[{
              RowBox[{"DeleteDuplicates", "[", 
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"RandomSample", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Values", "[", "data", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ",", "4"}], "]"}], ",", "ansCo"}], "]"}], "]"}], ",", 
              "4"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"mixed", "=", 
           RowBox[{"RandomSample", "[", "choices", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ans", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"mixed", ",", 
              RowBox[{
              "choices", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"InputForm", "[", 
           RowBox[{"{", 
            RowBox[{"q", ",", "ans", ",", "mixed", ",", "pic"}], "}"}], 
           "]"}]}]}], "]"}], "&"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", "\"\<CS_pack_Geog7\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687273590838623*^9, 3.687273733315528*^9}, 
   3.687273829514482*^9, {3.687274042020227*^9, 3.6872740425162487`*^9}, {
   3.6872741043827333`*^9, 3.6872741071260033`*^9}, {3.687274356505733*^9, 
   3.6872743578910923`*^9}, {3.687274682762026*^9, 3.687274684298414*^9}, {
   3.6872747547654543`*^9, 3.68727475593223*^9}, {3.6872747935750113`*^9, 
   3.687274794733657*^9}, {3.687274873490655*^9, 3.687274874010304*^9}, {
   3.687274945125887*^9, 3.687274946132659*^9}, {3.687275044643114*^9, 
   3.687275045810807*^9}, {3.687275199698476*^9, 3.6872752050901527`*^9}, {
   3.687275313631503*^9, 3.687275339951126*^9}, {3.687275514457521*^9, 
   3.687275595738269*^9}, {3.687275641101959*^9, 3.687275642076371*^9}, {
   3.687275783989087*^9, 3.687275785082943*^9}, {3.687276069369328*^9, 
   3.687276089182515*^9}, {3.6872761650343657`*^9, 3.687276165552479*^9}, {
   3.687276240022442*^9, 3.687276292048506*^9}, {3.6872763854020653`*^9, 
   3.6872765089595346`*^9}, {3.687276543116666*^9, 3.6872765470290747`*^9}, {
   3.6872765968128757`*^9, 3.687276602379869*^9}, {3.68727667196959*^9, 
   3.68727668611808*^9}, {3.687278435355307*^9, 3.68727846969987*^9}, {
   3.687278634608831*^9, 3.687278643047579*^9}, {3.687279110095563*^9, 
   3.6872791470381947`*^9}, {3.6872792954407673`*^9, 3.687279311970619*^9}, 
   3.68728027857808*^9, {3.68728033975875*^9, 3.687280368959631*^9}, 
   3.7913859070008793`*^9, {3.7913859545805397`*^9, 3.791386109624859*^9}, {
   3.7913921860009117`*^9, 3.7913923078871813`*^9}, {3.791392973864861*^9, 
   3.791393039781497*^9}, {3.791393196041627*^9, 3.791393198581505*^9}, 
   3.7913933494255667`*^9, 3.791393752761318*^9, 3.791393998789093*^9, {
   3.791394050020282*^9, 3.7913943136996183`*^9}, {3.791394345180171*^9, 
   3.791394361916003*^9}, {3.79139474826897*^9, 3.791394749778021*^9}, 
   3.791394799683299*^9, {3.7913948496511497`*^9, 3.7913948634669313`*^9}, {
   3.791395040842478*^9, 3.791395060321184*^9}, {3.7913952046918993`*^9, 
   3.7913952190019827`*^9}, {3.791395269329891*^9, 3.791395318824665*^9}, {
   3.791395381633953*^9, 3.791395532737067*^9}, {3.791396820511784*^9, 
   3.7913968558329153`*^9}, {3.791396894233968*^9, 3.7913969608864393`*^9}, {
   3.791397015671071*^9, 3.7913970788540583`*^9}, {3.791397252969692*^9, 
   3.79139730305338*^9}, {3.791397343038185*^9, 3.791397377717381*^9}, {
   3.791397422966647*^9, 3.791397429277328*^9}, {3.7913975765181828`*^9, 
   3.791397634292056*^9}, {3.791399828088135*^9, 3.791399828533744*^9}, {
   3.791399860184972*^9, 3.791399860829756*^9}, {3.791399935118779*^9, 
   3.7913999882774763`*^9}, {3.7914000183010683`*^9, 3.791400141692809*^9}, {
   3.7914006500450993`*^9, 3.791400661540333*^9}, {3.791400710181918*^9, 
   3.7914007107073298`*^9}, {3.79140079930344*^9, 3.79140080135651*^9}, {
   3.791400858098803*^9, 3.791400887898925*^9}, {3.791400959150279*^9, 
   3.7914010440425034`*^9}, {3.791401083875442*^9, 3.791401094091083*^9}, {
   3.791452226356883*^9, 3.791452244180162*^9}, {3.791453083787155*^9, 
   3.791453087024527*^9}, {3.791461074178298*^9, 3.791461141271426*^9}, 
   3.791461243086905*^9, {3.79146133395464*^9, 3.791461378672577*^9}, {
   3.791461432649806*^9, 3.791461433258913*^9}, {3.7914615187531357`*^9, 
   3.7914615207729197`*^9}, {3.791461574641602*^9, 3.791461640609065*^9}, {
   3.79146167280333*^9, 3.791461697176342*^9}, {3.79146175612111*^9, 
   3.791461776888137*^9}, {3.7914618553525963`*^9, 3.791461862999823*^9}, 
   3.791462229312838*^9, {3.791462419349802*^9, 3.791462423165802*^9}, {
   3.791462967166301*^9, 3.791462973068129*^9}, {3.791468263917273*^9, 
   3.791468271177636*^9}, {3.7914686324200363`*^9, 3.791468666472683*^9}, {
   3.791468705569297*^9, 3.791468708592087*^9}, {3.791468857094447*^9, 
   3.79146893060114*^9}},
 CellLabel->
  "In[2185]:=",ExpressionUUID->"596daf91-37a6-4d43-b6c5-8490f2a2e6be"]
},
WindowSize->{1746, 1384},
WindowMargins->{{2, Automatic}, {Automatic, 4}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (September 29, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 23727, 468, 674, "Input",ExpressionUUID->"596daf91-37a6-4d43-b6c5-8490f2a2e6be"]
}
]
*)

