(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     12486,        238]
NotebookOptionsPosition[     12042,        221]
NotebookOutlinePosition[     12402,        237]
CellTagsIndexPosition[     12359,        234]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Delayed", "[", "\[IndentingNewLine]", 
    RowBox[{"APIFunction", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"choices", "=", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Afghanistan\>\"", ",", "\"\<Albania\>\"", ",", 
            "\"\<Algeria\>\"", ",", "\"\<American Samoa\>\"", ",", 
            "\"\<Andorra\>\"", ",", "\"\<Angola\>\"", ",", "\"\<Anguilla\>\"",
             ",", "\"\<Antigua and Barbuda\>\"", ",", "\"\<Argentina\>\"", 
            ",", "\"\<Armenia\>\"", ",", "\"\<Aruba\>\"", ",", 
            "\"\<Australia\>\"", ",", "\"\<Austria\>\"", ",", 
            "\"\<Azerbaijan\>\"", ",", "\"\<Bahamas\>\"", ",", 
            "\"\<Bahrain\>\"", ",", "\"\<Bangladesh\>\"", ",", 
            "\"\<Barbados\>\"", ",", "\"\<Belarus\>\"", ",", 
            "\"\<Belgium\>\"", ",", "\"\<Belize\>\"", ",", "\"\<Benin\>\"", 
            ",", "\"\<Bermuda\>\"", ",", "\"\<Bhutan\>\"", ",", 
            "\"\<Bolivia\>\"", ",", "\"\<Bosnia and Herzegovina\>\"", ",", 
            "\"\<Botswana\>\"", ",", "\"\<Brazil\>\"", ",", 
            "\"\<British Virgin Islands\>\"", ",", "\"\<Brunei\>\"", ",", 
            "\"\<Bulgaria\>\"", ",", "\"\<Burkina Faso\>\"", ",", 
            "\"\<Burundi\>\"", ",", "\"\<Cambodia\>\"", ",", 
            "\"\<Cameroon\>\"", ",", "\"\<Canada\>\"", ",", 
            "\"\<Cape Verde\>\"", ",", "\"\<Cayman Islands\>\"", ",", 
            "\"\<Central African Republic\>\"", ",", "\"\<Chad\>\"", ",", 
            "\"\<Chile\>\"", ",", "\"\<China\>\"", ",", 
            "\"\<Christmas Island\>\"", ",", "\"\<Cocos Keeling Islands\>\"", 
            ",", "\"\<Colombia\>\"", ",", "\"\<Comoros\>\"", ",", 
            "\"\<Cook Islands\>\"", ",", "\"\<Costa Rica\>\"", ",", 
            "\"\<Croatia\>\"", ",", "\"\<Cuba\>\"", ",", "\"\<Curacao\>\"", 
            ",", "\"\<Cyprus\>\"", ",", "\"\<Czech Republic\>\"", ",", 
            "\"\<Democratic Republic of the Congo\>\"", ",", 
            "\"\<Denmark\>\"", ",", "\"\<Djibouti\>\"", ",", 
            "\"\<Dominica\>\"", ",", "\"\<Dominican Republic\>\"", ",", 
            "\"\<East Timor\>\"", ",", "\"\<Ecuador\>\"", ",", 
            "\"\<Egypt\>\"", ",", "\"\<El Salvador\>\"", ",", 
            "\"\<Equatorial Guinea\>\"", ",", "\"\<Eritrea\>\"", ",", 
            "\"\<Estonia\>\"", ",", "\"\<Ethiopia\>\"", ",", 
            "\"\<Falkland Islands\>\"", ",", "\"\<Faroe Islands\>\"", ",", 
            "\"\<Fiji\>\"", ",", "\"\<Finland\>\"", ",", "\"\<France\>\"", 
            ",", "\"\<French Guiana\>\"", ",", "\"\<French Polynesia\>\"", 
            ",", "\"\<Gabon\>\"", ",", "\"\<Gambia\>\"", ",", 
            "\"\<Gaza Strip\>\"", ",", "\"\<Georgia\>\"", ",", 
            "\"\<Germany\>\"", ",", "\"\<Ghana\>\"", ",", "\"\<Gibraltar\>\"",
             ",", "\"\<Greece\>\"", ",", "\"\<Greenland\>\"", ",", 
            "\"\<Grenada\>\"", ",", "\"\<Guadeloupe\>\"", ",", "\"\<Guam\>\"",
             ",", "\"\<Guatemala\>\"", ",", "\"\<Guernsey\>\"", ",", 
            "\"\<Guinea\>\"", ",", "\"\<Guinea-Bissau\>\"", ",", 
            "\"\<Guyana\>\"", ",", "\"\<Haiti\>\"", ",", "\"\<Honduras\>\"", 
            ",", "\"\<Hong Kong\>\"", ",", "\"\<Hungary\>\"", ",", 
            "\"\<Iceland\>\"", ",", "\"\<India\>\"", ",", "\"\<Indonesia\>\"",
             ",", "\"\<Iran\>\"", ",", "\"\<Iraq\>\"", ",", "\"\<Ireland\>\"",
             ",", "\"\<Isle of Man\>\"", ",", "\"\<Israel\>\"", ",", 
            "\"\<Italy\>\"", ",", "\"\<Ivory Coast\>\"", ",", 
            "\"\<Jamaica\>\"", ",", "\"\<Japan\>\"", ",", "\"\<Jersey\>\"", 
            ",", "\"\<Jordan\>\"", ",", "\"\<Kazakhstan\>\"", ",", 
            "\"\<Kenya\>\"", ",", "\"\<Kiribati\>\"", ",", "\"\<Kosovo\>\"", 
            ",", "\"\<Kuwait\>\"", ",", "\"\<Kyrgyzstan\>\"", ",", 
            "\"\<Laos\>\"", ",", "\"\<Latvia\>\"", ",", "\"\<Lebanon\>\"", 
            ",", "\"\<Lesotho\>\"", ",", "\"\<Liberia\>\"", ",", 
            "\"\<Libya\>\"", ",", "\"\<Liechtenstein\>\"", ",", 
            "\"\<Lithuania\>\"", ",", "\"\<Luxembourg\>\"", ",", 
            "\"\<Macau\>\"", ",", "\"\<Macedonia\>\"", ",", 
            "\"\<Madagascar\>\"", ",", "\"\<Malawi\>\"", ",", 
            "\"\<Malaysia\>\"", ",", "\"\<Maldives\>\"", ",", "\"\<Mali\>\"", 
            ",", "\"\<Malta\>\"", ",", "\"\<Marshall Islands\>\"", ",", 
            "\"\<Martinique\>\"", ",", "\"\<Mauritania\>\"", ",", 
            "\"\<Mauritius\>\"", ",", "\"\<Mayotte\>\"", ",", 
            "\"\<Mexico\>\"", ",", "\"\<Micronesia\>\"", ",", 
            "\"\<Moldova\>\"", ",", "\"\<Monaco\>\"", ",", "\"\<Mongolia\>\"",
             ",", "\"\<Montenegro\>\"", ",", "\"\<Montserrat\>\"", ",", 
            "\"\<Morocco\>\"", ",", "\"\<Mozambique\>\"", ",", 
            "\"\<Myanmar\>\"", ",", "\"\<Namibia\>\"", ",", "\"\<Nauru\>\"", 
            ",", "\"\<Nepal\>\"", ",", "\"\<Netherlands\>\"", ",", 
            "\"\<New Caledonia\>\"", ",", "\"\<New Zealand\>\"", ",", 
            "\"\<Nicaragua\>\"", ",", "\"\<Niger\>\"", ",", "\"\<Nigeria\>\"",
             ",", "\"\<Niue\>\"", ",", "\"\<Norfolk Island\>\"", ",", 
            "\"\<Northern Mariana Islands\>\"", ",", "\"\<North Korea\>\"", 
            ",", "\"\<Norway\>\"", ",", "\"\<Oman\>\"", ",", 
            "\"\<Pakistan\>\"", ",", "\"\<Palau\>\"", ",", "\"\<Panama\>\"", 
            ",", "\"\<Papua New Guinea\>\"", ",", "\"\<Paraguay\>\"", ",", 
            "\"\<Peru\>\"", ",", "\"\<Philippines\>\"", ",", 
            "\"\<Pitcairn Islands\>\"", ",", "\"\<Poland\>\"", ",", 
            "\"\<Portugal\>\"", ",", "\"\<Puerto Rico\>\"", ",", 
            "\"\<Qatar\>\"", ",", "\"\<Republic of the Congo\>\"", ",", 
            "\"\<R\[EAcute]union\>\"", ",", "\"\<Romania\>\"", ",", 
            "\"\<Russia\>\"", ",", "\"\<Rwanda\>\"", ",", 
            "\"\<Saint Helena, Ascension,\\nand Tristan da Cunha\>\"", ",", 
            "\"\<Saint Kitts and Nevis\>\"", ",", "\"\<Saint Lucia\>\"", ",", 
            "\"\<Saint Pierre and Miquelon\>\"", ",", 
            "\"\<Saint Vincent and the Grenadines\>\"", ",", "\"\<Samoa\>\"", 
            ",", "\"\<San Marino\>\"", ",", 
            "\"\<S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\>\"", ",", 
            "\"\<Saudi Arabia\>\"", ",", "\"\<Senegal\>\"", ",", 
            "\"\<Serbia\>\"", ",", "\"\<Seychelles\>\"", ",", 
            "\"\<Sierra Leone\>\"", ",", "\"\<Singapore\>\"", ",", 
            "\"\<Sint Maarten\>\"", ",", "\"\<Slovakia\>\"", ",", 
            "\"\<Slovenia\>\"", ",", "\"\<Solomon Islands\>\"", ",", 
            "\"\<Somalia\>\"", ",", "\"\<South Africa\>\"", ",", 
            "\"\<South Korea\>\"", ",", "\"\<South Sudan\>\"", ",", 
            "\"\<Spain\>\"", ",", "\"\<Sri Lanka\>\"", ",", "\"\<Sudan\>\"", 
            ",", "\"\<Suriname\>\"", ",", "\"\<Svalbard\>\"", ",", 
            "\"\<Swaziland\>\"", ",", "\"\<Sweden\>\"", ",", 
            "\"\<Switzerland\>\"", ",", "\"\<Syria\>\"", ",", 
            "\"\<Taiwan\>\"", ",", "\"\<Tajikistan\>\"", ",", 
            "\"\<Tanzania\>\"", ",", "\"\<Thailand\>\"", ",", "\"\<Togo\>\"", 
            ",", "\"\<Tokelau\>\"", ",", "\"\<Tonga\>\"", ",", 
            "\"\<Trinidad and Tobago\>\"", ",", "\"\<Tunisia\>\"", ",", 
            "\"\<Turkey\>\"", ",", "\"\<Turkmenistan\>\"", ",", 
            "\"\<Turks and Caicos Islands\>\"", ",", "\"\<Tuvalu\>\"", ",", 
            "\"\<Uganda\>\"", ",", "\"\<Ukraine\>\"", ",", 
            "\"\<United Arab Emirates\>\"", ",", "\"\<United Kingdom\>\"", 
            ",", "\"\<United States\>\"", ",", 
            "\"\<United States Virgin Islands\>\"", ",", "\"\<Uruguay\>\"", 
            ",", "\"\<Uzbekistan\>\"", ",", "\"\<Vanuatu\>\"", ",", 
            "\"\<Vatican City\>\"", ",", "\"\<Venezuela\>\"", ",", 
            "\"\<Vietnam\>\"", ",", "\"\<Wallis and Futuna Islands\>\"", ",", 
            "\"\<West Bank\>\"", ",", "\"\<Western Sahara\>\"", ",", 
            "\"\<Yemen\>\"", ",", "\"\<Zambia\>\"", ",", "\"\<Zimbabwe\>\""}],
            "}"}], ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mixed", "=", 
        RowBox[{"RandomSample", "[", "choices", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ans", "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"mixed", ",", 
           RowBox[{"choices", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "q", "=", 
        "\"\<Which country or territory is represented by this flag?\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"flag", "=", 
        RowBox[{"CountryData", "[", 
         RowBox[{
          RowBox[{"choices", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Flag\>\""}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"pic", "=", 
        RowBox[{
         RowBox[{"Hold", "[", 
          RowBox[{"Image", "[", 
           RowBox[{
            RowBox[{"ImagePad", "[", 
             RowBox[{
              RowBox[{"Rasterize", "[", 
               RowBox[{"h1", ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", "476", "}"}]}]}], "]"}], ",", "2", ",", 
              "LightGray"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "480"}]}], "]"}], "]"}], "/.", 
         RowBox[{"h1", "\[Rule]", "flag"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"InputForm", "[", 
         RowBox[{"{", 
          RowBox[{"q", ",", "ans", ",", "mixed", ",", "pic"}], "}"}], "]"}], 
        "&"}]}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   "\"\<CS_pack_Geog4\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6828723032062397`*^9, 3.6828723736375437`*^9}, 
   3.684758090068783*^9, {3.684758136276125*^9, 3.6847581631576777`*^9}, {
   3.684758236846251*^9, 3.684758278618536*^9}, {3.6847583110867558`*^9, 
   3.684758312473991*^9}, {3.684758345830468*^9, 3.684758360864675*^9}, {
   3.6847584036212063`*^9, 3.684758409719998*^9}, {3.684758780677137*^9, 
   3.6847587917406797`*^9}, {3.684758850098337*^9, 3.6847588522224483`*^9}, {
   3.684759507770405*^9, 3.6847595153998127`*^9}, {3.684759551481214*^9, 
   3.684759557868525*^9}, 3.684760720363414*^9, {3.684760803239931*^9, 
   3.684760835695055*^9}, 3.68743078077798*^9, {3.687430863394199*^9, 
   3.68743086600596*^9}, {3.687430903923114*^9, 3.687430963198731*^9}, {
   3.687431114759913*^9, 3.6874311410557632`*^9}, {3.68743120166899*^9, 
   3.687431202834064*^9}, 3.692462412742529*^9, {3.7265125247479*^9, 
   3.726512554050045*^9}},ExpressionUUID->"d8cbc04c-2ae2-4d0a-ba79-\
91f165b9858a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/markgreenberg/CS_pack_Geog4\"",
     "https://www.wolframcloud.com/objects/markgreenberg/CS_pack_Geog4"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/markgreenberg/CS_pack_Geog4"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.726512583329524*^9},ExpressionUUID->"4dc86a1d-c010-4a2b-bea7-\
e52f592a8a6b"]
}, Open  ]]
},
WindowSize->{1246, 931},
WindowMargins->{{-1, Automatic}, {Automatic, 74}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 10956, 182, 787, "Input",ExpressionUUID->"d8cbc04c-2ae2-4d0a-ba79-91f165b9858a"],
Cell[11539, 206, 487, 12, 71, "Output",ExpressionUUID->"4dc86a1d-c010-4a2b-bea7-e52f592a8a6b"]
}, Open  ]]
}
]
*)

