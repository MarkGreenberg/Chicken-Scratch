(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     31268,        601]
NotebookOptionsPosition[     30919,        587]
NotebookOutlinePosition[     31313,        603]
CellTagsIndexPosition[     31270,        600]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Delayed", "[", "\[IndentingNewLine]", 
    RowBox[{"APIFunction", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"RandomChoice", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         "1", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"data", "=", 
           InterpretationBox[
            DynamicModuleBox[{Typeset`open = False}, 
             TemplateBox[{"List", "ListIcon", 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["List", "IconizedItem"]}]}, {
                  RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["50", "IconizedItem"]}]}, {
                  RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["21184", "IconizedItem"]}]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               Dynamic[Typeset`open]},
              "IconizedObject"]],
            {
            "Alabama" -> {
              "Montgomery", "Birmingham", "Mobile", "Huntsville", 
               "Tuscaloosa", "Hoover"}, 
             "Alaska" -> {
              "Juneau", "Anchorage", "Fairbanks", "Knik\[Hyphen]Fairview", 
               "College", "Sitka"}, 
             "Arizona" -> {
              "Phoenix", "Tucson", "Mesa", "Chandler", "Gilbert", "Glendale"},
              "Arkansas" -> {
              "Little Rock", "Fort Smith", "Fayetteville", "Springdale", 
               "Jonesboro", "North Little Rock"}, 
             "California" -> {
              "Sacramento", "Los Angeles", "San Diego", "San Jose", 
               "San Francisco", "Fresno"}, 
             "Colorado" -> {
              "Denver", "Colorado Springs", "Aurora", "Fort Collins", 
               "Lakewood", "Thornton"}, 
             "Connecticut" -> {
              "Hartford", "Bridgeport", "New Haven", "Stamford", "Waterbury", 
               "Norwalk"}, 
             "Delaware" -> {
              "Dover", "Wilmington", "Newark", "Middletown", "Bear", 
               "Brookside"}, 
             "Florida" -> {
              "Tallahassee", "Jacksonville", "Miami", "Tampa", "Orlando", 
               "Saint Petersburg", "Hialeah"}, 
             "Georgia" -> {
              "Atlanta", "Augusta", "Columbus", "Savannah", "Athens", 
               "Sandy Springs"}, 
             "Hawaii" -> {
              "Honolulu", "Pearl City", "Hilo", "Waipahu", "Kailua", 
               "Kaneohe"}, 
             "Idaho" -> {
              "Boise", "Nampa", "Meridian", "Idaho Falls", "Pocatello", 
               "Caldwell"}, 
             "Illinois" -> {
              "Springfield", "Aurora", "Rockford", "Joliet", "Naperville", 
               "Springfield"}, 
             "Indiana" -> {
              "Indianapolis", "Fort Wayne", "Evansville", "South Bend", 
               "Carmel", "Fishers"}, 
             "Iowa" -> {
              "Des Moines", "Cedar Rapids", "Davenport", "Sioux City", 
               "Iowa City", "Waterloo"}, 
             "Kansas" -> {
              "Topeka", "Wichita", "Overland Park", "Kansas City", "Olathe", 
               "Lawrence"}, 
             "Kentucky" -> {
              "Frankfort", "Louisville", "Lexington", "Bowling Green", 
               "Owensboro", "Covington", "Richmond"}, 
             "Louisiana" -> {
              "Baton Rouge", "New Orleans", "Shreveport", "Metairie", 
               "Lafayette", "Lake Charles"}, 
             "Maine" -> {
              "Augusta", "Lewiston", "Bangor", "Auburn", "Biddeford"}, 
             "Maryland" -> {
              "Annapolis", "Baltimore", "Columbia", "Germantown", 
               "Silver Spring", "Frederick", "Waldorf"}, 
             "Massachusetts" -> {
              "Boston", "Worcester", "Springfield", "Lowell", "Cambridge", 
               "New Bedford"}, 
             "Michigan" -> {
              "Lansing", "Detroit", "Grand Rapids", "Warren", 
               "Sterling Heights", "Ann Arbor"}, 
             "Minnesota" -> {
              "Saint Paul", "Minneapolis", "Rochester", "Bloomington", 
               "Duluth", "Brooklyn Park"}, 
             "Mississippi" -> {
              "Jackson", "Gulfport", "Southaven", "Hattiesburg", "Biloxi", 
               "Meridian"}, 
             "Missouri" -> {
              "Jefferson City", "Kansas City", "Saint Louis", "Springfield", 
               "Independence", "Columbia", "Lee's Summit"}, 
             "Montana" -> {
              "Helena", "Billings", "Missoula", "Great Falls", "Bozeman", 
               "Butte"}, 
             "Nebraska" -> {
              "Lincoln", "Omaha", "Bellevue", "Grand Island", "Kearney", 
               "Fremont"}, 
             "Nevada" -> {
              "Carson City", "Las Vegas", "Henderson", "Reno", 
               "North Las Vegas", "Paradise", "Sunrise Manor"}, 
             "New Hampshire" -> {
              "Concord", "Manchester", "Nashua", "Dover", "Rochester", 
               "Salem"}, 
             "New Jersey" -> {
              "Trenton", "Newark", "Jersey City", "Paterson", "Elizabeth", 
               "Edison", "Hamilton township"}, 
             "New Mexico" -> {
              "Santa Fe", "Albuquerque", "Las Cruces", "Rio Rancho", 
               "Roswell", "Farmington"}, 
             "New York" -> {
              "Albany", "New York City", "Oyster Bay", "Buffalo", 
               "North Hempstead", "Rochester", "Yonkers"}, 
             "North Carolina" -> {
              "Raleigh", "Charlotte", "Greensboro", "Durham", "Winston-Salem",
                "Fayetteville"}, 
             "North Dakota" -> {
              "Bismarck", "Fargo", "Grand Forks", "Minot", "West Fargo", 
               "Williston"}, 
             "Ohio" -> {
              "Columbus", "Cleveland", "Cincinnati", "Toledo", "Akron", 
               "Dayton"}, 
             "Oklahoma" -> {
              "Oklahoma City", "Tulsa", "Norman", "Broken Arrow", "Lawton", 
               "Edmond"}, 
             "Oregon" -> {
              "Salem", "Portland", "Eugene", "Gresham", "Hillsboro", 
               "Beaverton"}, 
             "Pennsylvania" -> {
              "Harrisburg", "Philadelphia", "Pittsburgh", "Allentown", "Erie",
                "Reading", "Scranton"}, 
             "Rhode Island" -> {
              "Providence", "Warwick", "Cranston", "Pawtucket", 
               "East Providence", "Woonsocket"}, 
             "South Carolina" -> {
              "Columbia", "Charleston", "North Charleston", "Mount Pleasant", 
               "Rock Hill", "Greenville"}, 
             "South Dakota" -> {
              "Pierre", "Sioux Falls", "Rapid City", "Aberdeen", "Brookings", 
               "Watertown", "Mitchell"}, 
             "Tennessee" -> {
              "Nashville", "Memphis", "Knoxville", "Chattanooga", 
               "Clarksville", "Murfreesboro"}, 
             "Texas" -> {
              "Austin", "Houston", "San Antonio", "Dallas", "Fort Worth", 
               "El Paso"}, 
             "Utah" -> {
              "Salt Lake City", "West Valley City", "Provo", "West Jordan", 
               "Orem", "Sandy"}, 
             "Vermont" -> {
              "Montpelier", "Burlington", "Essex", "South Burlington", 
               "Colchester", "Rutland", "Essex Junction"}, 
             "Virginia" -> {
              "Richmond", "Virginia Beach", "Norfolk", "Chesapeake", 
               "Arlington", "Newport News"}, 
             "Washington" -> {
              "Olympia", "Seattle", "Spokane", "Tacoma", "Vancouver", 
               "Bellevue", "Kent"}, 
             "West Virginia" -> {
              "Charleston", "Huntington", "Morgantown", "Parkersburg", 
               "Wheeling", "Weirton"}, 
             "Wisconsin" -> {
              "Madison", "Milwaukee", "Green Bay", "Kenosha", "Racine", 
               "Appleton"}, 
             "Wyoming" -> {
              "Cheyenne", "Casper", "Laramie", "Gillette", "Rock Springs", 
               "Sheridan"}},
            SelectWithContents->True,
            Selectable->False]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ansData", "=", 
           RowBox[{"RandomChoice", "[", "data", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ansSt", "=", 
           RowBox[{"Keys", "[", "ansData", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ansCap", "=", 
           RowBox[{
            RowBox[{"Values", "[", "ansData", "]"}], "\[LeftDoubleBracket]", 
            "1", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"caps", "=", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"RandomSample", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"First", "[", "#", "]"}], "&"}], "/@", 
                RowBox[{"Values", "[", "data", "]"}]}], ",", "4"}], "]"}], 
             ",", "ansCap"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"cities", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Values", "[", "ansData", "]"}], ",", "1"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"choices", "=", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"RandomSample", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"caps", ",", "cities"}], "]"}], ",", "3"}], "]"}], 
             ",", "ansCap"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"q", "=", 
           RowBox[{
           "\"\<What is the capital of \>\"", "<>", "ansSt", "<>", 
            "\"\<?\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"mixed", "=", 
           RowBox[{"RandomSample", "[", "choices", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ans", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"mixed", ",", 
              RowBox[{
              "choices", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"InputForm", "[", 
           RowBox[{"{", 
            RowBox[{"q", ",", "ans", ",", "mixed"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "2", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"data", "=", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             RowBox[{"Permutations", "[", 
              RowBox[{
               InterpretationBox[
                DynamicModuleBox[{Typeset`open = False}, 
                 TemplateBox[{"List", "ListIcon", 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["List", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"58", ",", "2"}], "}"}], "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["11608", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   Dynamic[Typeset`open]},
                  "IconizedObject"]],
                {{"Annapolis, Maryland", {38.9722814, -76.5063962}}, {
                 "Asheville, North Carolina", {35.570977, -82.5527383}}, {
                 "Atlanta, Georgia", {33.7629088, -84.4226745}}, {
                 "Banff, Alberta, Canada", {51.17, -115.57000000000001`}}, {
                 "Bangor, Maine", {44.8306292, -68.7923966}}, {
                 "Baton Rouge, Louisiana", {30.4484535, -91.1258993}}, {
                 "Birmingham, Alabama", {33.5274441, -86.799047}}, {
                 "Bismarck, North Dakota", {46.8110381, -100.7701017}}, {
                 "Boston, Massachusetts", {42.33196, -71.0201725}}, {
                 "Buffalo, New York", {42.8924919, -78.8596862}}, {
                 "Champaign, Illinois", {40.115057, -88.2736523}}, {
                 "Charleston, West Virginia", {38.3486917, -81.632324}}, {
                 "Columbus, Ohio", {39.9847989, -82.9850438}}, {
                 "Dallas, Texas", {32.794176, -96.7655033}}, {
                 "Denver, Colorado", {39.7618487, -104.8806251}}, {
                 "Des Moines, Iowa", {41.5739461, -93.616708}}, {
                 "Durango, Colorado", {37.2756726, -107.8675773}}, {
                 "Fargo, North Dakota", {46.8652063, -96.8290052}}, {
                 "Frankfort, Kentucky", {38.192651, -84.8663698}}, {
                 "Hermosillo, Sonora, Mexico", {29.07, -110.97}}, {
                 "Honolulu, Hawaii", {21.30895, -157.826182}}, {
                 "Houston, Texas", {29.7804724, -95.3863425}}, {
                 "Indianapolis, Indiana", {39.7779954, -86.1458378}}, {
                 "Jackson, Mississippi", {32.3158308, -90.2128226}}, {
                 "Jackson (Hole), Wyoming", {43.4740508, -110.7721929}}, {
                 "Juneau, Alaska", {58.3727004, -134.1787807}}, {
                 "Lansing, Michigan", {42.7097871, -84.5562219}}, {
                 "Lewiston, Idaho", {46.3931296, -116.9934717}}, {
                 "Little Rock, Arkansas", {34.7254318, -92.358556}}, {
                 "Los Angeles, California", {34.0193936, -118.4108248}}, {
                 "Madison, Wisconsin", {43.0878055, -89.4301208}}, {
                 "Miami, Florida", {25.775163, -80.2086152}}, {
                 "Montpelier, Vermont", {44.2664485, -72.5715237}}, {
                 "Nashville, Tennessee", {36.1691287, -86.7847898}}, {
                 "New Haven, Connecticut", {41.3108088, -72.924953}}, {
                 "Oklahoma City, Oklahoma", {35.4670795, -97.5136565}}, {
                 "Omaha, Nebraska", {41.2646751, -96.0419269}}, {
                 "Philadelphia, Pennsylvania", {40.0093755, -75.1333459}}, {
                 "Phoenix, Arizona", {33.5721625, -112.0879662}}, {
                 "Reno, Nevada", {39.4744867, -119.7765384}}, {
                 "Roanoke, Virginia", {37.2778301, -79.9584716}}, {
                 "Saint George, Utah", {37.076062, -113.5805004}}, {
                 "Saint Louis, Missouri", {38.6356988, -90.2445816}}, {
                 "Saint Paul, Minnesota", {44.9488695, -93.1038552}}, {
                 "Salem, Oregon", {44.939156482207, -123.033120906331}}, {
                 "Salem, Massachusetts", {42.5012804, -70.8975017}}, {
                 "Salt Lake City, Utah", {40.7785197, -111.9314142}}, {
                 "San Diego, California", {32.8152995, -117.134993}}, {
                 "San Juan, Puerto Rico", {18.44, -66.13}}, {
                 "Silver City, New Mexico", {32.7785811, -108.2694089}}, {
                 "Sioux Falls, South Dakota", {43.5383351, -96.7319985}}, {
                 "Spokane, Washington", {47.6735545, -117.4165955}}, {
                 "Taos, New Mexico", {36.3868315, -105.5802518}}, {
                 "Tallahassee, Florida", {30.4551091, -84.2534191}}, {
                 "Toronto, Ontario, Canada", {43.65, -79.38}}, {
                 "Trenton, New Jersey", {40.2237484, -74.7640005}}, {
                 "Twin Falls, Idaho", {42.5628154, -114.4639881}}, {
                 "Wichita, Kansas", {37.6906938, -97.3426776}}},
                SelectWithContents->True,
                Selectable->False], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], ",", "4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pic", "=", 
           RowBox[{"ToCharacterCode", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"InputForm", "[", 
              RowBox[{
               RowBox[{"Hold", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"loc1", "=", 
                  RowBox[{"GeoPosition", "[", "h1", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"loc2", "=", 
                  RowBox[{"GeoPosition", "[", "h2", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"dist", "=", 
                  RowBox[{"GeoDistance", "[", 
                   RowBox[{"loc1", ",", "loc2"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"azmuth", "=", 
                  RowBox[{"GeoDirection", "[", 
                   RowBox[{"loc1", ",", "loc2"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"steps", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"GeoDestination", "[", 
                    RowBox[{"loc1", ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "azmuth"}], "}"}]}], "]"}], "&"}], "/@", 
                   RowBox[{"Subdivide", "[", 
                    RowBox[{"dist", ",", "99"}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"elevs", "=", 
                  RowBox[{"GeoElevationData", "[", 
                   RowBox[{"GeoPosition", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "&"}], "/@", "steps"}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"ticks", "[", 
                   RowBox[{"min_", ",", "max_"}], "]"}], ":=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{"min", ",", "100"}], "]"}], ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"max", ",", "100"}], "]"}]}], "}"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{"elevs", ",", "\[IndentingNewLine]", 
                   RowBox[{"PlotStyle", "\[Rule]", "Brown"}], ",", 
                   RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
                   RowBox[{"Axes", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True"}], "}"}]}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                   "PlotLabel", "\[Rule]", 
                    "\"\<Elevation (ft)   A to B\>\""}], ",", 
                   RowBox[{"Ticks", "\[Rule]", "ticks"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"15", ",", "Black"}], "}"}]}], ",", 
                   RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "10"]}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "960"}]}], "]"}]}], "]"}], 
               "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"h1", "\[Rule]", 
                  RowBox[{"data", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "1", ",", "2"}], 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"h2", "\[Rule]", 
                  RowBox[{"data", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "2", ",", "2"}], 
                   "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"picTransit", "=", 
           RowBox[{
            RowBox[{"Hold", "[", 
             RowBox[{"ReleaseHold", "[", 
              RowBox[{"ToExpression", "[", 
               RowBox[{"FromCharacterCode", "[", "h3", "]"}], "]"}], "]"}], 
             "]"}], "/.", 
            RowBox[{"h3", "\[Rule]", "pic"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
          "q", "=", 
           "\"\<The graph shows elevation in a straight route between which \
two cities?\>\""}], ";", "\[IndentingNewLine]", 
          RowBox[{"choices", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<>", 
              "\"\<\\nto \>\"", "<>", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "&"}], "/@",
             "data"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"mixed", "=", 
           RowBox[{"RandomSample", "[", "choices", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ans", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"mixed", ",", 
              RowBox[{
              "choices", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"InputForm", "[", 
           RowBox[{"{", 
            RowBox[{"q", ",", "ans", ",", "mixed", ",", "picTransit"}], "}"}],
            "]"}]}]}], "]"}], "&"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", "\"\<CS_pack_Geog3\>\"", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682697904082299*^9, 3.682697924726768*^9}, {
   3.68269822900231*^9, 3.682698266175712*^9}, {3.682698359810544*^9, 
   3.682698380262137*^9}, {3.6826984452690973`*^9, 3.682698515118616*^9}, {
   3.682699553286598*^9, 3.682699560023535*^9}, {3.6826997270513573`*^9, 
   3.682699791812161*^9}, {3.6827003302647*^9, 3.682700345679068*^9}, 
   3.68270045962752*^9, {3.682701852374256*^9, 3.68270186286763*^9}, {
   3.682701895190531*^9, 3.682701917678278*^9}, {3.682702050338986*^9, 
   3.682702095623337*^9}, {3.682702168700016*^9, 3.682702210213643*^9}, {
   3.682702534617461*^9, 3.682702571029868*^9}, 3.6827855011309643`*^9, {
   3.6828650990111227`*^9, 3.682865116478017*^9}, {3.682865153833333*^9, 
   3.682865193679216*^9}, {3.682865257297427*^9, 3.682865271748987*^9}, {
   3.682865561540028*^9, 3.682865571859771*^9}, {3.68286594001683*^9, 
   3.682865950795228*^9}, {3.682866115750865*^9, 3.6828661387815027`*^9}, {
   3.682866196001012*^9, 3.682866204146163*^9}, {3.6828662381959133`*^9, 
   3.68286624977215*^9}, {3.682866694737516*^9, 3.682866699520391*^9}, {
   3.682866746749432*^9, 3.682866769923223*^9}, {3.682866813223241*^9, 
   3.682866823180744*^9}, 3.6924621433969383`*^9, 3.715771214534244*^9, {
   3.715771302704774*^9, 3.715771324966096*^9}, {3.715771407830632*^9, 
   3.7157714179828873`*^9}, {3.71577152937397*^9, 3.715771561362618*^9}, {
   3.71577166859155*^9, 3.715771876761682*^9}, {3.715771913585969*^9, 
   3.715772235681806*^9}, {3.715772288240994*^9, 3.715772385688918*^9}, {
   3.715772504201501*^9, 3.7157725168398848`*^9}, {3.715772598768524*^9, 
   3.715773214584464*^9}, {3.715773255463746*^9, 3.71577344497521*^9}, {
   3.71577350077551*^9, 3.7157735759580793`*^9}, {3.715773789783098*^9, 
   3.715773792687201*^9}, {3.7157738262692947`*^9, 3.71577384067612*^9}, {
   3.715773928589686*^9, 3.7157740307797832`*^9}, {3.715774065020546*^9, 
   3.715774155796076*^9}, {3.715793529188158*^9, 3.7157935315447903`*^9}, {
   3.7157935815541058`*^9, 3.715793602329493*^9}, {3.715793639729538*^9, 
   3.71579366194881*^9}, {3.7157939453784113`*^9, 3.7157939527448874`*^9}, {
   3.715794001663966*^9, 3.715794092231147*^9}, {3.715794184000059*^9, 
   3.715794187631279*^9}, {3.715794342441502*^9, 3.715794347881403*^9}, {
   3.715794475519186*^9, 3.7157944761103992`*^9}, {3.715794509015745*^9, 
   3.715794528878728*^9}, {3.715794559144404*^9, 3.7157945626225557`*^9}, 
   3.715794646957045*^9, {3.7157950560823097`*^9, 3.715795186898864*^9}, {
   3.7157984667808533`*^9, 3.715798507019017*^9}, {3.715798638549066*^9, 
   3.715798638891335*^9}, {3.715798678698649*^9, 3.715798751690382*^9}, {
   3.715798794611199*^9, 3.715798853058639*^9}, {3.715798934428878*^9, 
   3.715798935002563*^9}, {3.715798970770892*^9, 3.715798973529828*^9}, {
   3.715799070474381*^9, 3.715799084665923*^9}, {3.71579928716998*^9, 
   3.715799359529064*^9}, {3.715799436850842*^9, 3.715799438272534*^9}, {
   3.715799848776593*^9, 3.715799889880382*^9}, {3.7157999209123707`*^9, 
   3.715799933343437*^9}, {3.715799964377067*^9, 3.715800034823083*^9}, {
   3.715800096585046*^9, 3.715800102031111*^9}, {3.7158001422241096`*^9, 
   3.7158001534082537`*^9}, {3.71580034814369*^9, 3.7158004173266563`*^9}, {
   3.715800566727129*^9, 3.715800657927306*^9}, {3.715800690838831*^9, 
   3.7158007219588203`*^9}, {3.715800826603674*^9, 3.715800909797974*^9}, {
   3.715801567045821*^9, 3.715801575284999*^9}, {3.7158016755267467`*^9, 
   3.715801675869792*^9}, {3.7158017211187687`*^9, 3.715801721293679*^9}, {
   3.715801824117622*^9, 3.715801829245016*^9}, {3.71580197883134*^9, 
   3.715801982877674*^9}, {3.715802055525749*^9, 3.715802073325562*^9}, {
   3.7158022278785458`*^9, 3.715802281653493*^9}, {3.715802316221437*^9, 
   3.715802339589179*^9}, {3.715802843061839*^9, 3.7158028543968773`*^9}, {
   3.715802897413754*^9, 3.715802984661422*^9}, {3.715803127197041*^9, 
   3.715803139844627*^9}, {3.715803272197538*^9, 3.715803286736896*^9}, {
   3.715803513549039*^9, 3.7158035356203327`*^9}, {3.7158036540536613`*^9, 
   3.715803656620129*^9}, {3.715803687355945*^9, 3.715803746180746*^9}, {
   3.715803816845954*^9, 3.7158038811969023`*^9}, {3.7158039213239*^9, 
   3.7158039318114347`*^9}, {3.715803964131859*^9, 3.7158039955556183`*^9}, {
   3.7158041434677896`*^9, 3.7158041804669657`*^9}, {3.7158042452111387`*^9, 
   3.715804337915222*^9}, {3.7158044236846952`*^9, 3.715804528780201*^9}, {
   3.715804558844161*^9, 3.7158046829152193`*^9}, {3.715804884866996*^9, 
   3.715804919491147*^9}, {3.715804989443684*^9, 3.715805033227985*^9}, 
   3.715805090190795*^9, {3.715805141319295*^9, 3.715805141621151*^9}, {
   3.715805190058872*^9, 3.71580519505053*^9}, {3.715805268610385*^9, 
   3.715805274313957*^9}, {3.715805531250202*^9, 3.715805616257402*^9}, {
   3.715805649418416*^9, 3.7158056942438173`*^9}, {3.7158057699695873`*^9, 
   3.715805819298583*^9}, {3.715806363866181*^9, 3.715806364656064*^9}, {
   3.71580639678574*^9, 3.715806432377043*^9}, {3.7158064934656343`*^9, 
   3.715806494711754*^9}, {3.715806531979528*^9, 3.715806539921998*^9}, {
   3.715806583529674*^9, 3.7158065867844763`*^9}, 3.715806653689446*^9, 
   3.71580697627665*^9, 3.7158070088213997`*^9, {3.715807100336732*^9, 
   3.7158071260724907`*^9}, {3.715807299081407*^9, 3.715807339404656*^9}, {
   3.715818132806939*^9, 3.7158181527344847`*^9}, {3.715818211782498*^9, 
   3.715818240718259*^9}, {3.7158183568706512`*^9, 3.7158183804301033`*^9}, {
   3.7158184577655897`*^9, 3.7158184801339827`*^9}, {3.7158185666298933`*^9, 
   3.715818614832217*^9}, {3.715818666877358*^9, 3.71581868287716*^9}, {
   3.715818749732788*^9, 3.7158187927167253`*^9}, {3.7158188645088787`*^9, 
   3.7158188926445093`*^9}, {3.715818963748466*^9, 3.715819003652359*^9}, {
   3.715819145396196*^9, 3.715819183732935*^9}, {3.715819247203808*^9, 
   3.715819308005498*^9}, {3.715819423612546*^9, 3.715819457427238*^9}, {
   3.7158195411872187`*^9, 3.7158195778440247`*^9}, {3.7158196580190277`*^9, 
   3.7158197000764627`*^9}, {3.715819766202602*^9, 3.7158197926664*^9}, {
   3.715819869083571*^9, 3.715819905434319*^9}, {3.715819951106057*^9, 
   3.715819972770648*^9}, {3.7158200498103237`*^9, 3.71582006748207*^9}, {
   3.7158201501696587`*^9, 3.7158201688816442`*^9}, {3.715820244641625*^9, 
   3.715820294626693*^9}, {3.715852885951251*^9, 3.715852908734975*^9}, {
   3.715852964334832*^9, 3.715852988406715*^9}, {3.715853060990911*^9, 
   3.7158530836623363`*^9}, {3.7158531665099173`*^9, 3.715853192286353*^9}, {
   3.715853298029758*^9, 3.715853320853259*^9}, {3.715853396605166*^9, 
   3.715853432597337*^9}, {3.7158535580365868`*^9, 3.7158535913010473`*^9}, {
   3.715853692524826*^9, 3.7158537172532873`*^9}, {3.715853780748846*^9, 
   3.715853929275289*^9}, {3.768673160525461*^9, 3.768673185271467*^9}, {
   3.768673333033679*^9, 3.7686734214886093`*^9}, {3.7686740890742693`*^9, 
   3.768674130515307*^9}, {3.768674195737666*^9, 3.7686742089201*^9}, {
   3.768674294780615*^9, 3.768674334320348*^9}, {3.768674429810545*^9, 
   3.768674431184126*^9}, {3.7686746576476192`*^9, 3.768674662981277*^9}, 
   3.76867478969461*^9, {3.768674853676757*^9, 3.7686748774526663`*^9}, {
   3.768754755428887*^9, 3.7687547938370543`*^9}, {3.768754851327737*^9, 
   3.7687548889238653`*^9}, {3.768754921988756*^9, 3.7687550527077208`*^9}, {
   3.7687550910128393`*^9, 3.7687551370752783`*^9}, {3.7687616288576403`*^9, 
   3.768761658947268*^9}, {3.768761705914112*^9, 3.7687617101218452`*^9}, {
   3.7687617505069036`*^9, 3.768761761473837*^9}, {3.7687618012443*^9, 
   3.768761805849872*^9}, {3.7687619595374947`*^9, 3.768762005887928*^9}, 
   3.797964443756336*^9, {3.7979644869303703`*^9, 3.797964563049438*^9}, {
   3.797964688451089*^9, 3.797964697410022*^9}, {3.797964864312113*^9, 
   3.797964894284437*^9}, {3.797964980828816*^9, 3.7979650277548513`*^9}, 
   3.797965077168187*^9, {3.797965115664442*^9, 3.797965137924358*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"92d8f599-ee0c-4e92-ae8a-b3fd024e8033"]
},
WindowSize->{1737, 1318},
WindowMargins->{{0, Automatic}, {Automatic, 5}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 13, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"879925b3-8edf-4e34-9cc5-cdeb70e12c78"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 30357, 565, 908, "Input",ExpressionUUID->"92d8f599-ee0c-4e92-ae8a-b3fd024e8033"]
}
]
*)

